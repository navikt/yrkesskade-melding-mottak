spring:
  application.name: yrkesskade-melding-mottak
  autoconfigure.exclude: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  main:
    banner-mode: "off"
    allow-bean-definition-overriding: true
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    client-id: yrkesskade-melding-mottak
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      group-id: yrkesskade-melding-mottak
      auto-offset-reset: latest
      enable-auto-commit: false
    listener:
      ack-mode: record
  datasource:
    url: jdbc:postgresql://${YRKESSKADE_MOTTAK_DB_HOST}:${YRKESSKADE_MOTTAK_DB_PORT}/${YRKESSKADE_MOTTAK_DB_DATABASE}
    username: ${YRKESSKADE_MOTTAK_DB_USERNAME}
    password: ${YRKESSKADE_MOTTAK_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      connection-test-query: "select 1"
      max-lifetime: 30000
      minimum-idle: 1
      data-source-properties.stringtype: unspecified # Nødvendig for å kunde sende en String til et json-felt i PostgresSql
  flyway:
    enabled: true
  jpa:
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        ddl-auto: none
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus
      base-path: /internal
      path-mapping.prometheus: prometheus
  metrics:
    export.prometheus.enabled: true
    tags:
      application: ${spring.application.name}

prosessering:
  continuousRunning.enabled: true
  maxantall: 5
  fixedDelayString:
    in:
      milliseconds: 5000
  delete:
    after:
      weeks: 4

saf.graphql.url: https://saf.dev-fss-pub.nais.io/graphql
pdl.graphql.url: https://pdl-api.dev-fss-pub.nais.io/graphql
oppgave.url: https://oppgave-q1.dev-fss-pub.nais.io

SAF_APP_CLIENT_ID: dev-fss.teamdokumenthandtering.saf
PDL_APP_CLIENT_ID: dev-fss.pdl.pdl-api
OPPGAVE_APP_CLIENT_ID: bef7cd4d-e65e-41f8-a743-b643e81f2aea
TENANT_ID: 966ac572-f5b7-4bbe-aa88-c76419c0f851         # trygdeetaten.no

---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:postgresql://localhost:5432/test
    username: test
    password: test
  kafka:
    properties:
      schema.registry.url: denne-maa-bare-ha-en-verdi
kafka:
  topic:
    aapen-dok-journalfoering: test

KAFKA_BROKERS: ${spring.embedded.kafka.brokers}

no.nav.security.jwt:
  issuer:
    azuread:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/azuread/.well-known/openid-configuration
      accepted_audience: aad-client-id
  client:
    registration:
      saf-maskintilmaskin:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azuread/token
        grant-type: client_credentials
        scope: saf
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      pdl-maskintilmaskin:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azuread/token
        grant-type: client_credentials
        scope: pdl
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
      oppgave-maskintilmaskin:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azuread/token
        grant-type: client_credentials
        scope: oppgave
        authentication:
          client-id: dummy-client-id
          client-secret: dummy-secret
          client-auth-method: client_secret_basic
